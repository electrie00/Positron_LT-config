[include homing_override.cfg]




[gcode_macro Unlock_Motor] 
gcode:   
    SET_KINEMATIC_POSITION
    

[gcode_macro UNLOAD_FILAMENT]
gcode = 

  M83 
  M104 S200 ; set extruder temp
  G1 E-100 F2000
  G1 E-100 F2000
  G1 E-100 F2000
  G1 E-50 F2000
  M104 S0
  G92 E0
  G90

[gcode_macro LOAD_FILAMENT]
gcode = 
  M83 
  M104 S200 ; set extruder temp
  heater_active
  M109 S200                        ; wait for hot end temperature to reach e.g. 210C
  G1 E100 F2000
  G1 E100 F2000
  G1 E100 F2000
  G1 E4 F600

  G92 E0
  G90

[gcode_macro PRINT_START]
gcode:

  {% set extruder_temp = client.extruder_temp | default(0) %}
 {% set bed_temp = client.bed_temp | default(0) %}

  M104 S{{ extruder_temp }} ; set extruder temp
  M140 S{{ bed_temp }} ; set bed temp
  heater_active
  
  G28
  G0 X120 Y110 F10000
  
  heater_active                                    ; Z raise
  M190 S {{ bed_temp }}
  bed_over
  M109 S {{ extruder_temp }}                         ; wait for hot end temperature to reach e.g. 210C
  extruder_over
  
  PRINT_START

  HOME_Z_LED
  RESPOND TYPE=echo MSG="Z 轴归位"
  {% set homelocation_x = printer["gcode_macro HOMING_VARIABLES"].home_x_position %}
  {% set homelocation_y = printer["gcode_macro HOMING_VARIABLES"].home_y_position %}
  RESPOND TYPE=echo MSG="正在归位 Z 轴……"
  G90
  G0 X{homelocation_x} Y{homelocation_y} F10000
  G28 X Z
  
  #BED_TILT_CALIBRATE

  
  G1 Z15 F10000

  
  working   ; color orange - printing color
  #G1 X42 Y175 F7200                               ; move to start
  #G1 Z0.3 F800                                  ; Move to layer height
  #G1 X142 Y175 E22 F800                           ; print prime line
  #G1 X142 Y173 F7200                              ; move to start
  #G1 X42 Y173 E44 F800                            ; print prime line
  G92 E0
  G1 X8 Y170 Z0.3 F7200                               ; move to start
  G1 X8 Y20 E16 F800
  G1 X10 F7200
  G1 X10 Y170 E32 F800
  
  G1 X8 Y170 Z0.6 F7200
  
  G1 X8 Y20 E48 F800
  G1 X10 F7200
  G1 X10 Y170 E64 F800


[gcode_macro PRINT_END]
gcode:
  
  M104 S0
  M140 S0
  complete
  # Retract the filament
  G92 E1
  G1 E-50 F10000
  G1 X80 Y142.50 F3000
  G91
  G1 Z80 F800
  G90
  M84
  G4  P1000 ; wait a second
  temperature_LED


[gcode_macro over]
gcode:
  M104 S200 ; set extruder temp
  heater_active
  G28
  G0 X131 Y62 Z0 F10000
  UNLOAD_FILAMENT

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
  {% set retract = client.cancel_retract|default(0)|abs %}
  ##### define park position #####
  {% set park_x = "" if (client.park_at_cancel_x|default(120) is none)
            else "X=" ~ client.park_at_cancel_x %}
  {% set park_y = "" if (client.park_at_cancel_y|default(110) is none)
            else "Y=" ~ client.park_at_cancel_y %}
  {% set custom_park = park_x|length > 0 or park_y|length > 0 %}
  ##### end of definitions #####
  # restore idle_timeout time if needed
  {% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
  {% endif %}
  {% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
  _CLIENT_RETRACT LENGTH={retract}
  TURN_OFF_HEATERS
  M106 S0
  {client.user_cancel_macro|default("")}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
  # clear pause_next_layer and pause_at_layer as preparation for next print
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  CANCEL_PRINT_BASE

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True
